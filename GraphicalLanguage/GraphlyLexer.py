# Generated from Graphly.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2>")
        buf.write("\u0186\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4")
        buf.write("\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3")
        buf.write("\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t")
        buf.write("\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3")
        buf.write("\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16")
        buf.write("\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\23")
        buf.write("\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26")
        buf.write("\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30")
        buf.write("\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32")
        buf.write("\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34")
        buf.write("\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36")
        buf.write("\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3")
        buf.write(" \3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'")
        buf.write("\3(\3(\3)\3)\3*\3*\3+\3+\3+\3,\3,\3,\3-\3-\3.\3.\3.\3")
        buf.write("/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\63\3\63")
        buf.write("\3\64\3\64\3\64\3\64\7\64\u0143\n\64\f\64\16\64\u0146")
        buf.write("\13\64\3\64\3\64\3\65\6\65\u014b\n\65\r\65\16\65\u014c")
        buf.write("\3\65\7\65\u0150\n\65\f\65\16\65\u0153\13\65\3\65\5\65")
        buf.write("\u0156\n\65\3\66\6\66\u0159\n\66\r\66\16\66\u015a\3\66")
        buf.write("\5\66\u015e\n\66\3\66\3\66\6\66\u0162\n\66\r\66\16\66")
        buf.write("\u0163\3\67\3\67\7\67\u0168\n\67\f\67\16\67\u016b\13\67")
        buf.write("\3\67\3\67\38\68\u0170\n8\r8\168\u0171\39\39\69\u0176")
        buf.write("\n9\r9\169\u0177\3:\3:\3;\3;\3<\3<\3=\3=\7=\u0182\n=\f")
        buf.write("=\16=\u0185\13=\2\2>\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21")
        buf.write("\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24")
        buf.write("\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37")
        buf.write("= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64")
        buf.write("g\65i\66k\67m8o9q:s;u<w=y>\3\2\n\4\2\13\f\"\"\4\2\f\f")
        buf.write("\17\17\5\2\f\f\17\17$$\3\2c|\3\2\62;\3\2\63;\3\2C\\\6")
        buf.write("\2\62;C\\aac|\2\u0190\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2")
        buf.write("\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2")
        buf.write("\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2")
        buf.write("\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!")
        buf.write("\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2")
        buf.write("\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3")
        buf.write("\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2")
        buf.write("\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2")
        buf.write("\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2")
        buf.write("\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3")
        buf.write("\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c")
        buf.write("\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2")
        buf.write("m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2")
        buf.write("\2w\3\2\2\2\2y\3\2\2\2\3{\3\2\2\2\5}\3\2\2\2\7\u0082\3")
        buf.write("\2\2\2\t\u0088\3\2\2\2\13\u008e\3\2\2\2\r\u0093\3\2\2")
        buf.write("\2\17\u0098\3\2\2\2\21\u009c\3\2\2\2\23\u00a2\3\2\2\2")
        buf.write("\25\u00a7\3\2\2\2\27\u00ad\3\2\2\2\31\u00af\3\2\2\2\33")
        buf.write("\u00b1\3\2\2\2\35\u00b9\3\2\2\2\37\u00c0\3\2\2\2!\u00c8")
        buf.write("\3\2\2\2#\u00ca\3\2\2\2%\u00cc\3\2\2\2\'\u00d2\3\2\2\2")
        buf.write(")\u00d4\3\2\2\2+\u00d6\3\2\2\2-\u00da\3\2\2\2/\u00e1\3")
        buf.write("\2\2\2\61\u00e6\3\2\2\2\63\u00ea\3\2\2\2\65\u00ef\3\2")
        buf.write("\2\2\67\u00f4\3\2\2\29\u00f9\3\2\2\2;\u00ff\3\2\2\2=\u0106")
        buf.write("\3\2\2\2?\u010c\3\2\2\2A\u0113\3\2\2\2C\u0115\3\2\2\2")
        buf.write("E\u0117\3\2\2\2G\u0119\3\2\2\2I\u011b\3\2\2\2K\u011d\3")
        buf.write("\2\2\2M\u011f\3\2\2\2O\u0121\3\2\2\2Q\u0123\3\2\2\2S\u0125")
        buf.write("\3\2\2\2U\u0127\3\2\2\2W\u012a\3\2\2\2Y\u012d\3\2\2\2")
        buf.write("[\u012f\3\2\2\2]\u0132\3\2\2\2_\u0134\3\2\2\2a\u0136\3")
        buf.write("\2\2\2c\u0138\3\2\2\2e\u013a\3\2\2\2g\u013e\3\2\2\2i\u0155")
        buf.write("\3\2\2\2k\u015d\3\2\2\2m\u0165\3\2\2\2o\u016f\3\2\2\2")
        buf.write("q\u0173\3\2\2\2s\u0179\3\2\2\2u\u017b\3\2\2\2w\u017d\3")
        buf.write("\2\2\2y\u017f\3\2\2\2{|\7\f\2\2|\4\3\2\2\2}~\7n\2\2~\177")
        buf.write("\7q\2\2\177\u0080\7q\2\2\u0080\u0081\7r\2\2\u0081\6\3")
        buf.write("\2\2\2\u0082\u0083\7u\2\2\u0083\u0084\7v\2\2\u0084\u0085")
        buf.write("\7c\2\2\u0085\u0086\7t\2\2\u0086\u0087\7v\2\2\u0087\b")
        buf.write("\3\2\2\2\u0088\u0089\7w\2\2\u0089\u008a\7p\2\2\u008a\u008b")
        buf.write("\7v\2\2\u008b\u008c\7k\2\2\u008c\u008d\7n\2\2\u008d\n")
        buf.write("\3\2\2\2\u008e\u008f\7u\2\2\u008f\u0090\7v\2\2\u0090\u0091")
        buf.write("\7g\2\2\u0091\u0092\7r\2\2\u0092\f\3\2\2\2\u0093\u0094")
        buf.write("\7v\2\2\u0094\u0095\7j\2\2\u0095\u0096\7g\2\2\u0096\u0097")
        buf.write("\7p\2\2\u0097\16\3\2\2\2\u0098\u0099\7g\2\2\u0099\u009a")
        buf.write("\7p\2\2\u009a\u009b\7f\2\2\u009b\20\3\2\2\2\u009c\u009d")
        buf.write("\7e\2\2\u009d\u009e\7j\2\2\u009e\u009f\7g\2\2\u009f\u00a0")
        buf.write("\7e\2\2\u00a0\u00a1\7m\2\2\u00a1\22\3\2\2\2\u00a2\u00a3")
        buf.write("\7g\2\2\u00a3\u00a4\7n\2\2\u00a4\u00a5\7u\2\2\u00a5\u00a6")
        buf.write("\7g\2\2\u00a6\24\3\2\2\2\u00a7\u00a8\7r\2\2\u00a8\u00a9")
        buf.write("\7q\2\2\u00a9\u00aa\7k\2\2\u00aa\u00ab\7p\2\2\u00ab\u00ac")
        buf.write("\7v\2\2\u00ac\26\3\2\2\2\u00ad\u00ae\7<\2\2\u00ae\30\3")
        buf.write("\2\2\2\u00af\u00b0\7.\2\2\u00b0\32\3\2\2\2\u00b1\u00b2")
        buf.write("\7u\2\2\u00b2\u00b3\7g\2\2\u00b3\u00b4\7i\2\2\u00b4\u00b5")
        buf.write("\7o\2\2\u00b5\u00b6\7g\2\2\u00b6\u00b7\7p\2\2\u00b7\u00b8")
        buf.write("\7v\2\2\u00b8\34\3\2\2\2\u00b9\u00ba\7e\2\2\u00ba\u00bb")
        buf.write("\7k\2\2\u00bb\u00bc\7t\2\2\u00bc\u00bd\7e\2\2\u00bd\u00be")
        buf.write("\7n\2\2\u00be\u00bf\7g\2\2\u00bf\36\3\2\2\2\u00c0\u00c1")
        buf.write("\7r\2\2\u00c1\u00c2\7q\2\2\u00c2\u00c3\7n\2\2\u00c3\u00c4")
        buf.write("\7{\2\2\u00c4\u00c5\7i\2\2\u00c5\u00c6\7q\2\2\u00c6\u00c7")
        buf.write("\7p\2\2\u00c7 \3\2\2\2\u00c8\u00c9\7]\2\2\u00c9\"\3\2")
        buf.write("\2\2\u00ca\u00cb\7_\2\2\u00cb$\3\2\2\2\u00cc\u00cd\7i")
        buf.write("\2\2\u00cd\u00ce\7t\2\2\u00ce\u00cf\7q\2\2\u00cf\u00d0")
        buf.write("\7w\2\2\u00d0\u00d1\7r\2\2\u00d1&\3\2\2\2\u00d2\u00d3")
        buf.write("\7>\2\2\u00d3(\3\2\2\2\u00d4\u00d5\7@\2\2\u00d5*\3\2\2")
        buf.write("\2\u00d6\u00d7\7p\2\2\u00d7\u00d8\7w\2\2\u00d8\u00d9\7")
        buf.write("o\2\2\u00d9,\3\2\2\2\u00da\u00db\7e\2\2\u00db\u00dc\7")
        buf.write("c\2\2\u00dc\u00dd\7p\2\2\u00dd\u00de\7x\2\2\u00de\u00df")
        buf.write("\7c\2\2\u00df\u00e0\7u\2\2\u00e0.\3\2\2\2\u00e1\u00e2")
        buf.write("\7f\2\2\u00e2\u00e3\7t\2\2\u00e3\u00e4\7c\2\2\u00e4\u00e5")
        buf.write("\7y\2\2\u00e5\60\3\2\2\2\u00e6\u00e7\7n\2\2\u00e7\u00e8")
        buf.write("\7q\2\2\u00e8\u00e9\7i\2\2\u00e9\62\3\2\2\2\u00ea\u00eb")
        buf.write("\7u\2\2\u00eb\u00ec\7c\2\2\u00ec\u00ed\7x\2\2\u00ed\u00ee")
        buf.write("\7g\2\2\u00ee\64\3\2\2\2\u00ef\u00f0\7h\2\2\u00f0\u00f1")
        buf.write("\7k\2\2\u00f1\u00f2\7n\2\2\u00f2\u00f3\7n\2\2\u00f3\66")
        buf.write("\3\2\2\2\u00f4\u00f5\7o\2\2\u00f5\u00f6\7q\2\2\u00f6\u00f7")
        buf.write("\7x\2\2\u00f7\u00f8\7g\2\2\u00f88\3\2\2\2\u00f9\u00fa")
        buf.write("\7r\2\2\u00fa\u00fb\7n\2\2\u00fb\u00fc\7c\2\2\u00fc\u00fd")
        buf.write("\7e\2\2\u00fd\u00fe\7g\2\2\u00fe:\3\2\2\2\u00ff\u0100")
        buf.write("\7t\2\2\u0100\u0101\7q\2\2\u0101\u0102\7v\2\2\u0102\u0103")
        buf.write("\7c\2\2\u0103\u0104\7v\2\2\u0104\u0105\7g\2\2\u0105<\3")
        buf.write("\2\2\2\u0106\u0107\7u\2\2\u0107\u0108\7e\2\2\u0108\u0109")
        buf.write("\7c\2\2\u0109\u010a\7n\2\2\u010a\u010b\7g\2\2\u010b>\3")
        buf.write("\2\2\2\u010c\u010d\7c\2\2\u010d\u010e\7u\2\2\u010e\u010f")
        buf.write("\7u\2\2\u010f\u0110\7k\2\2\u0110\u0111\7i\2\2\u0111\u0112")
        buf.write("\7p\2\2\u0112@\3\2\2\2\u0113\u0114\7*\2\2\u0114B\3\2\2")
        buf.write("\2\u0115\u0116\7+\2\2\u0116D\3\2\2\2\u0117\u0118\7`\2")
        buf.write("\2\u0118F\3\2\2\2\u0119\u011a\7a\2\2\u011aH\3\2\2\2\u011b")
        buf.write("\u011c\7\u0080\2\2\u011cJ\3\2\2\2\u011d\u011e\7/\2\2\u011e")
        buf.write("L\3\2\2\2\u011f\u0120\7,\2\2\u0120N\3\2\2\2\u0121\u0122")
        buf.write("\7\61\2\2\u0122P\3\2\2\2\u0123\u0124\7\'\2\2\u0124R\3")
        buf.write("\2\2\2\u0125\u0126\7-\2\2\u0126T\3\2\2\2\u0127\u0128\7")
        buf.write(">\2\2\u0128\u0129\7?\2\2\u0129V\3\2\2\2\u012a\u012b\7")
        buf.write("@\2\2\u012b\u012c\7?\2\2\u012cX\3\2\2\2\u012d\u012e\7")
        buf.write("?\2\2\u012eZ\3\2\2\2\u012f\u0130\7#\2\2\u0130\u0131\7")
        buf.write("?\2\2\u0131\\\3\2\2\2\u0132\u0133\7#\2\2\u0133^\3\2\2")
        buf.write("\2\u0134\u0135\7(\2\2\u0135`\3\2\2\2\u0136\u0137\7~\2")
        buf.write("\2\u0137b\3\2\2\2\u0138\u0139\t\2\2\2\u0139d\3\2\2\2\u013a")
        buf.write("\u013b\7\17\2\2\u013b\u013c\3\2\2\2\u013c\u013d\b\63\2")
        buf.write("\2\u013df\3\2\2\2\u013e\u013f\7/\2\2\u013f\u0140\7/\2")
        buf.write("\2\u0140\u0144\3\2\2\2\u0141\u0143\n\3\2\2\u0142\u0141")
        buf.write("\3\2\2\2\u0143\u0146\3\2\2\2\u0144\u0142\3\2\2\2\u0144")
        buf.write("\u0145\3\2\2\2\u0145\u0147\3\2\2\2\u0146\u0144\3\2\2\2")
        buf.write("\u0147\u0148\b\64\2\2\u0148h\3\2\2\2\u0149\u014b\5w<\2")
        buf.write("\u014a\u0149\3\2\2\2\u014b\u014c\3\2\2\2\u014c\u014a\3")
        buf.write("\2\2\2\u014c\u014d\3\2\2\2\u014d\u0151\3\2\2\2\u014e\u0150")
        buf.write("\5u;\2\u014f\u014e\3\2\2\2\u0150\u0153\3\2\2\2\u0151\u014f")
        buf.write("\3\2\2\2\u0151\u0152\3\2\2\2\u0152\u0156\3\2\2\2\u0153")
        buf.write("\u0151\3\2\2\2\u0154\u0156\7\62\2\2\u0155\u014a\3\2\2")
        buf.write("\2\u0155\u0154\3\2\2\2\u0156j\3\2\2\2\u0157\u0159\5w<")
        buf.write("\2\u0158\u0157\3\2\2\2\u0159\u015a\3\2\2\2\u015a\u0158")
        buf.write("\3\2\2\2\u015a\u015b\3\2\2\2\u015b\u015e\3\2\2\2\u015c")
        buf.write("\u015e\7\62\2\2\u015d\u0158\3\2\2\2\u015d\u015c\3\2\2")
        buf.write("\2\u015e\u015f\3\2\2\2\u015f\u0161\5s:\2\u0160\u0162\5")
        buf.write("u;\2\u0161\u0160\3\2\2\2\u0162\u0163\3\2\2\2\u0163\u0161")
        buf.write("\3\2\2\2\u0163\u0164\3\2\2\2\u0164l\3\2\2\2\u0165\u0169")
        buf.write("\7$\2\2\u0166\u0168\n\4\2\2\u0167\u0166\3\2\2\2\u0168")
        buf.write("\u016b\3\2\2\2\u0169\u0167\3\2\2\2\u0169\u016a\3\2\2\2")
        buf.write("\u016a\u016c\3\2\2\2\u016b\u0169\3\2\2\2\u016c\u016d\7")
        buf.write("$\2\2\u016dn\3\2\2\2\u016e\u0170\t\5\2\2\u016f\u016e\3")
        buf.write("\2\2\2\u0170\u0171\3\2\2\2\u0171\u016f\3\2\2\2\u0171\u0172")
        buf.write("\3\2\2\2\u0172p\3\2\2\2\u0173\u0175\7%\2\2\u0174\u0176")
        buf.write("\t\5\2\2\u0175\u0174\3\2\2\2\u0176\u0177\3\2\2\2\u0177")
        buf.write("\u0175\3\2\2\2\u0177\u0178\3\2\2\2\u0178r\3\2\2\2\u0179")
        buf.write("\u017a\7\60\2\2\u017at\3\2\2\2\u017b\u017c\t\6\2\2\u017c")
        buf.write("v\3\2\2\2\u017d\u017e\t\7\2\2\u017ex\3\2\2\2\u017f\u0183")
        buf.write("\t\b\2\2\u0180\u0182\t\t\2\2\u0181\u0180\3\2\2\2\u0182")
        buf.write("\u0185\3\2\2\2\u0183\u0181\3\2\2\2\u0183\u0184\3\2\2\2")
        buf.write("\u0184z\3\2\2\2\u0185\u0183\3\2\2\2\16\2\u0144\u014c\u0151")
        buf.write("\u0155\u015a\u015d\u0163\u0169\u0171\u0177\u0183\3\b\2")
        buf.write("\2")
        return buf.getvalue()


class GraphlyLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    WS = 49
    CR = 50
    COM_SIGN = 51
    ITR = 52
    FLT = 53
    TEXT = 54
    TYPE = 55
    COLOR = 56
    DOT = 57
    DIGIT = 58
    NONZERO = 59
    NAME = 60

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'\n'", "'loop'", "'start'", "'until'", "'step'", "'then'", 
            "'end'", "'check'", "'else'", "'point'", "':'", "','", "'segment'", 
            "'circle'", "'polygon'", "'['", "']'", "'group'", "'<'", "'>'", 
            "'num'", "'canvas'", "'draw'", "'log'", "'save'", "'fill'", 
            "'move'", "'place'", "'rotate'", "'scale'", "'assign'", "'('", 
            "')'", "'^'", "'_'", "'~'", "'-'", "'*'", "'/'", "'%'", "'+'", 
            "'<='", "'>='", "'='", "'!='", "'!'", "'&'", "'|'", "'\r'", 
            "'.'" ]

    symbolicNames = [ "<INVALID>",
            "WS", "CR", "COM_SIGN", "ITR", "FLT", "TEXT", "TYPE", "COLOR", 
            "DOT", "DIGIT", "NONZERO", "NAME" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "WS", "CR", "COM_SIGN", 
                  "ITR", "FLT", "TEXT", "TYPE", "COLOR", "DOT", "DIGIT", 
                  "NONZERO", "NAME" ]

    grammarFileName = "Graphly.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


